{"version":3,"sources":["components/ScrollToTop.jsx","store/index.tsx","components/Button/Button.tsx","apis/api.ts","components/CategoryButtons/CategoryButtons.tsx","components/Header/Header.tsx","components/Layout/Layout.tsx","components/VideoGrid/VideoGrid.tsx","components/VideoGridItem/VideoGridItem.tsx","pages/Category.tsx","pages/Search.tsx","pages/Top.tsx","components/SideListItem/SideListItem.tsx","components/SideList/SideList.tsx","components/VideoPlay/VideoPlay.tsx","components/VideoDetail/VideoDetail.tsx","pages/Watch.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Header/Header.module.scss","components/Layout/Layout.module.scss","components/SideListItem/SideListItem.module.scss","components/VideoPlay/VideoPlay.module.scss","components/Button/Button.module.scss","components/CategoryButtons/CategoryButtons.module.scss","components/VideoGrid/VideoGrid.module.scss","components/VideoGridItem/VideoGridItem.module.scss","components/SideList/SideList.module.scss","components/VideoDetail/VideoDetail.module.scss"],"names":["ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","React","Component","withRouter","initialState","popular","related","searched","selected","text","categories","categoryVideos","selectedCategoryId","reducer","state","action","type","payload","Store","createContext","globalState","setGlobalState","StoreProvider","children","useReducer","Provider","value","Button","memo","id","useContext","to","className","Style","button","onClick","getCategoryId","youtube","axios","create","baseURL","params","part","maxResults","key","regionCode","fetchCategoryVideos","a","get","chart","videoCategoryId","fetchCategories","fetchPopularData","fetchSelectedData","fetchRelatedData","relatedToVideoId","fetchSearchData","query","q","CategoryButtons","useEffect","then","res","data","items","container","filter","category","snippet","assignable","map","title","Header","useState","setText","history","useHistory","header","item","onSubmit","e","preventDefault","push","placeholder","onChange","target","disabled","icon","faSearch","Layout","wrapper","main","VideoGrid","VideoGridItem","src","search","alt","Category","videos","thumbnails","medium","url","Search","useLocation","setSearchResult","searchPrams","URLSearchParams","videoId","Top","SideListItem","info","SideList","sidenav","video","VideoPlay","wrap","VideoDetail","description","Watch","setVideos","searchParams","Promise","all","shift","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.501d294e.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React, { createContext, ReactNode, VFC, useReducer } from 'react';\n\ntype Props = {\n  children: ReactNode;\n};\n\ntype VIDEO = {\n  globalState: any;\n  setGlobalState: React.Dispatch<any>;\n};\n\nconst initialState = {\n  popular: [],\n  related: [],\n  searched: [],\n  selected: {},\n  text: '',\n  categories: [],\n  categoryVideos: [],\n  selectedCategoryId: '',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_SELECTED_CATEGORY_ID':\n      return {\n        ...state,\n        selectedCategoryId: action.payload.selectedCategoryId,\n      };\n    case 'SET_CATEGORY_VIDEOS':\n      return { ...state, categoryVideos: action.payload.categoryVideos };\n    case 'SET_CATEGORIES':\n      return { ...state, categories: action.payload.categories };\n    case 'SET_POPULAR':\n      return { ...state, popular: action.payload.popular };\n    case 'SET_RELATED':\n      return { ...state, related: action.payload.related };\n    case 'SET_SELECTED':\n      return { ...state, selected: action.payload.selected };\n    case 'SET_SEARCHED':\n      return { ...state, searched: action.payload.searched };\n    case 'SET_TEXT':\n      return { ...state, text: action.payload.text };\n    default:\n      return state;\n  }\n};\n\nexport const Store = createContext<VIDEO>({\n  globalState: initialState,\n  setGlobalState: () => null,\n});\n\nexport const StoreProvider: VFC<Props> = ({ children }) => {\n  const [globalState, setGlobalState] = useReducer(reducer, initialState);\n  return (\n    <Store.Provider value={{ globalState, setGlobalState }}>\n      {children}\n    </Store.Provider>\n  );\n};\n","import React, { memo, useContext, VFC } from 'react';\nimport Style from './Button.module.scss';\nimport { Link } from 'react-router-dom';\nimport { Store } from '../../store';\n\ntype Props = {\n  id: string;\n  text: string;\n};\n\nexport const Button: VFC<Props> = memo(({ id, text }) => {\n  const { setGlobalState } = useContext(Store);\n\n  const getCategoryId = (id) => {\n    setGlobalState({\n      type: 'SET_SELECTED_CATEGORY_ID',\n      payload: { selectedCategoryId: id },\n    });\n  };\n\n  return (\n    <Link to=\"/category\">\n      <button className={Style.button} onClick={() => getCategoryId(id)}>\n        {text}\n      </button>\n    </Link>\n  );\n});\n","import axios from 'axios';\n\nconst KEY = 'AIzaSyDrJxYwjLKP8tz1jszIOYR4QVO3y1b466I';\n\nconst youtube = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n});\n\nconst params = {\n  part: 'snippet',\n  maxResults: 40,\n  key: KEY,\n  regionCode: 'JP',\n  type: 'video',\n};\n\nexport const fetchCategoryVideos = async (id) => {\n  return await youtube.get('/videos', {\n    params: {\n      ...params,\n      chart: 'mostPopular',\n      videoCategoryId: id,\n    },\n  });\n};\n\nexport const fetchCategories = async () => {\n  return await youtube.get('/videoCategories', {\n    params: {\n      ...params,\n    },\n  });\n};\n\nexport const fetchPopularData = async () => {\n  return await youtube.get('/videos', {\n    params: {\n      ...params,\n      chart: 'mostPopular',\n    },\n  });\n};\n\nexport const fetchSelectedData = async (id) => {\n  return await youtube.get('/videos', {\n    params: {\n      ...params,\n      id,\n    },\n  });\n};\n\nexport const fetchRelatedData = async (id) => {\n  return await youtube.get('/search', {\n    params: {\n      ...params,\n      relatedToVideoId: id,\n    },\n  });\n};\n\nexport const fetchSearchData = async (query) => {\n  return await youtube.get('/search', {\n    params: {\n      ...params,\n      q: query,\n    },\n  });\n};\n","import React, { memo, useContext, useEffect, VFC } from 'react';\nimport { Button } from '../Button/Button';\nimport Style from './CategoryButtons.module.scss';\nimport { fetchCategories } from '../../apis/api';\nimport { Store } from '../../store';\n\nexport const CategoryButtons: VFC = memo(() => {\n  const { globalState, setGlobalState } = useContext(Store);\n\n  useEffect(\n    () => {\n      fetchCategories().then((res) => {\n        setGlobalState({\n          type: 'SET_CATEGORIES',\n          payload: { categories: res.data.items },\n        });\n      });\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  return (\n    <div className={Style.container}>\n      {globalState.categories\n        .filter((category) => {\n          return category.snippet.assignable === true;\n        })\n        .map((category) => {\n          return (\n            <Button\n              key={category.id}\n              id={category.id}\n              text={category.snippet.title}\n            />\n          );\n        })}\n    </div>\n  );\n});\n","import React, { VFC, useState, useEffect, useContext, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport Style from './Header.module.scss';\nimport { useHistory } from 'react-router-dom';\nimport { Store } from '../../store/index';\n\nexport const Header: VFC = memo(() => {\n  const [text, setText] = useState('');\n  const history = useHistory();\n  const { globalState, setGlobalState } = useContext(Store);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setGlobalState({ type: 'SET_TEXT', payload: { text } });\n    history.push(`/search?query=${text}`);\n  };\n  useEffect(() => {\n    setText(globalState.text);\n  }, [globalState.text]);\n  return (\n    <div className={Style.header}>\n      <div className={Style.item}>\n        <Link to=\"/\">\n          <span>CloneTube</span>\n        </Link>\n      </div>\n      <div className={Style.item}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"検索\"\n            onChange={(e) => setText(e.target.value)}\n            value={text}\n          />\n          <button type=\"submit\" disabled={text === '' ? true : false}>\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n});\n","import React, { memo, ReactNode, VFC } from 'react';\nimport { CategoryButtons } from '../CategoryButtons/CategoryButtons';\nimport { Header } from '../Header/Header';\nimport Style from './Layout.module.scss';\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const Layout: VFC<Props> = memo((props) => {\n  const { children } = props;\n  return (\n    <div className={Style.wrapper}>\n      <Header />\n      <CategoryButtons />\n      <div className={Style.main}>{children}</div>\n    </div>\n  );\n});\n","import React, { memo, ReactNode, VFC } from 'react';\nimport Style from './VideoGrid.module.scss';\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const VideoGrid: VFC<Props> = memo(({ children }) => {\n  return <div className={Style.container}>{children}</div>;\n});\n","import React, { memo, VFC } from 'react';\nimport Style from './VideoGridItem.module.scss';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  id: number;\n  src: string;\n  title: string;\n};\n\nexport const VideoGridItem: VFC<Props> = memo(({ id, src, title }) => {\n  return (\n    <Link to={{ pathname: 'watch', search: `?v=${id}` }} className={Style.item}>\n      <div>\n        <img src={src} alt={title} />\n        <span>{title}</span>\n      </div>\n    </Link>\n  );\n});\n","import React, { memo, useContext, useEffect, VFC } from 'react';\nimport { Layout } from '../components/Layout/Layout';\nimport { fetchCategoryVideos } from '../apis/api';\nimport { VideoGrid } from '../components/VideoGrid/VideoGrid';\nimport { Store } from '../store';\nimport { VideoGridItem } from '../components/VideoGridItem/VideoGridItem';\n\nexport const Category: VFC = memo(() => {\n  const { globalState, setGlobalState } = useContext(Store);\n\n  useEffect(\n    () => {\n      const id = globalState.selectedCategoryId;\n      fetchCategoryVideos(id).then((res) => {\n        setGlobalState({\n          type: 'SET_CATEGORY_VIDEOS',\n          payload: { categoryVideos: res.data.items },\n        });\n      });\n    },\n    // eslint-disable-next-line\n    [globalState.selectedCategoryId]\n  );\n  return (\n    <Layout>\n      <VideoGrid>\n        {globalState.categoryVideos.map((videos) => {\n          return (\n            <VideoGridItem\n              key={videos.id}\n              id={videos.id}\n              src={videos.snippet.thumbnails.medium.url}\n              title={videos.snippet.title}\n            />\n          );\n        })}\n      </VideoGrid>\n    </Layout>\n  );\n});\n","import React, { memo, useContext, useEffect, VFC } from 'react';\nimport { Layout } from '../components/Layout/Layout';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSearchData } from '../apis/api';\nimport { Store } from '../store/index';\nimport { VideoGrid } from '../components/VideoGrid/VideoGrid';\nimport { VideoGridItem } from '../components/VideoGridItem/VideoGridItem';\n\nexport const Search: VFC = memo(() => {\n  const { globalState, setGlobalState } = useContext(Store);\n  const location = useLocation();\n  const setSearchResult = async () => {\n    const searchPrams = new URLSearchParams(location.search);\n    const query = searchPrams.get('query');\n    if (query) {\n      await fetchSearchData(query).then((res) => {\n        setGlobalState({\n          type: 'SET_SEARCHED',\n          payload: { searched: res.data.items },\n        });\n      });\n    }\n  };\n  useEffect(\n    () => {\n      setSearchResult();\n    },\n    // eslint-disable-next-line\n    [location.search]\n  );\n  return (\n    <Layout>\n      <VideoGrid>\n        {globalState.searched ? (\n          globalState.searched.map((searched) => {\n            return (\n              <VideoGridItem\n                key={searched.id.videoId}\n                id={searched.id.videoId}\n                src={searched.snippet.thumbnails.medium.url}\n                title={searched.snippet.title}\n              />\n            );\n          })\n        ) : (\n          <p>No Data</p>\n        )}\n      </VideoGrid>\n    </Layout>\n  );\n});\n","import React, { VFC, useEffect, useContext, memo } from 'react';\nimport { Layout } from '../components/Layout/Layout';\nimport { fetchPopularData } from '../apis/api';\nimport { Store } from '../store/index';\nimport { VideoGrid } from '../components/VideoGrid/VideoGrid';\nimport { VideoGridItem } from '../components/VideoGridItem/VideoGridItem';\n\nexport const Top: VFC = memo(() => {\n  const { globalState, setGlobalState } = useContext(Store);\n  useEffect(() => {\n    fetchPopularData().then((res) => {\n      setGlobalState({\n        type: 'SET_POPULAR',\n        payload: { popular: res.data.items },\n      });\n    });\n  }, [setGlobalState]);\n\n  return (\n    <Layout>\n      <VideoGrid>\n        {globalState.popular.map((popular) => {\n          return (\n            <VideoGridItem\n              key={popular.id}\n              id={popular.id}\n              src={popular.snippet.thumbnails.medium.url}\n              title={popular.snippet.title}\n            />\n          );\n        })}\n      </VideoGrid>\n    </Layout>\n  );\n});\n","import React, { memo, VFC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Style from './SideListItem.module.scss';\n\ntype Props = {\n  id: string;\n  src: string;\n  title: string;\n};\n\nexport const SideListItem: VFC<Props> = memo(({ id, src, title }) => {\n  return (\n    <Link className={Style.item} to={{ pathname: 'watch', search: `?v=${id}` }}>\n      <img src={src} alt={title} />\n      <div className={Style.info}>\n        <span>{title}</span>\n      </div>\n    </Link>\n  );\n});\n","import React, { memo, useContext, VFC } from 'react';\nimport { Store } from '../../store/index';\nimport { SideListItem } from '../SideListItem/SideListItem';\nimport Style from './SideList.module.scss';\n\nexport const SideList: VFC = memo(() => {\n  const { globalState } = useContext(Store);\n\n  return (\n    <div className={Style.sidenav}>\n      {globalState.related ? (\n        globalState.related.map((video) => {\n          return (\n            video.snippet && (\n              <SideListItem\n                key={video.id.videoId}\n                id={video.id.videoId}\n                src={video.snippet.thumbnails.medium.url}\n                title={video.snippet.title}\n              />\n            )\n          );\n        })\n      ) : (\n        <span>No Data</span>\n      )}\n    </div>\n  );\n});\n","import React, { memo, VFC } from 'react';\nimport Youtube from 'react-youtube';\nimport Style from './VideoPlay.module.scss';\n\ntype Props = {\n  id: string;\n};\n\nexport const VideoPlay: VFC<Props> = memo(({ id }) => {\n  return (\n    <div className={Style.wrap}>\n      <Youtube className={Style.video} videoId={id} />\n    </div>\n  );\n});\n","import React, { memo, useContext, VFC } from 'react';\nimport { Store } from '../../store/index';\nimport { VideoPlay } from '../VideoPlay/VideoPlay';\nimport Style from './VideoDetail.module.scss';\nimport Linkify from 'react-linkify';\n\nexport const VideoDetail: VFC = memo(() => {\n  const { globalState } = useContext(Store);\n\n  return globalState.selected && globalState.selected.id ? (\n    <div className={Style.wrap}>\n      <VideoPlay id={globalState.selected.id} />\n      <p>{globalState.selected.snippet.title}</p>\n      <hr />\n      <Linkify>\n        <pre>{globalState.selected.snippet.description}</pre>\n      </Linkify>\n    </div>\n  ) : (\n    <span>No Data</span>\n  );\n});\n","import React, { VFC, useEffect, useContext, memo } from 'react';\nimport { Layout } from '../components/Layout/Layout';\nimport { SideList } from '../components/SideList/SideList';\nimport { VideoDetail } from '../components/VideoDetail/VideoDetail';\nimport { Store } from '../store/index';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSelectedData, fetchRelatedData } from '../apis/api';\n\nexport const Watch: VFC = memo(() => {\n  const { setGlobalState } = useContext(Store);\n  const location = useLocation();\n  const setVideos = async () => {\n    const searchParams = new URLSearchParams(location.search);\n    const id = searchParams.get('v');\n    if (id) {\n      const [selected, related] = await Promise.all([\n        fetchSelectedData(id),\n        fetchRelatedData(id),\n      ]);\n      setGlobalState({\n        type: 'SET_SELECTED',\n        payload: { selected: selected.data.items.shift() },\n      });\n      setGlobalState({\n        type: 'SET_RELATED',\n        payload: { related: related.data.items },\n      });\n    }\n  };\n  useEffect(\n    () => {\n      setVideos();\n    },\n    // eslint-disable-next-line\n    [location.search]\n  );\n  return (\n    <Layout>\n      <VideoDetail />\n      <SideList />\n    </Layout>\n  );\n});\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport { Category } from './pages/Category';\nimport { Search } from './pages/Search';\nimport { Top } from './pages/Top';\nimport { Watch } from './pages/Watch';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ScrollToTop />\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/category\" component={Category} />\n        <Route path=\"/watch\" component={Watch} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"item\":\"Header_item__2VaIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2dOTA\",\"main\":\"Layout_main__3OBIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SideListItem_item__b9PvY\",\"info\":\"SideListItem_info__1xDCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoPlay_wrap__21ucX\",\"video\":\"VideoPlay_video__2ekpd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CategoryButtons_container__21qFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"VideoGrid_container__1eUpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"VideoGridItem_item__2P63g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"SideList_sidenav__j1iTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoDetail_wrap__2Cb5v\"};"],"sourceRoot":""}